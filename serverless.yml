service: lambda-step-func-demo

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  stage: dev

custom:
  stage: ${opt:stage, self:provider.stage}

functions:
  add:
    handler: functions/add.handler
    timeout: 3

  subtract:
    handler: functions/subtract.handler
    timeout: 3

  double:
    handler: functions/double.handler
    timeout: 3

stepFunctions:
  stateMachines:
    LambdaStepFuncDemo:      
      name: LambdaStepFunctionDemo
      definition:
        Comment: "Simple demo of AWS Lambda and AWS Step Functions working together"
        StartAt: choose
        States:
          choose:
            Type: Choice
            Default: add
            Choices:
              - And: 
                  - Variable: $.x
                    NumericGreaterThanEquals: 42
                  - Variable: $.y
                    NumericLessThan: 42
                Next: subtract
          add:
            Type: Task
            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:custom.stage}-add
            Next: double
            ResultPath: $.n
          subtract:
            Type: Task
            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:custom.stage}-subtract
            Next: double
            ResultPath: $.n
          double:
            Type: Task
            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:custom.stage}-double
            InputPath: $.n
            TimeoutSeconds: 1
            Retry: 
              - ErrorEquals:
                  - States.Timeout
                IntervalSeconds: 1
                BackoffRate: 2.0
                MaxAttempts: 2
            Catch: 
              - ErrorEquals:
                  - NumberIsTooBig
                ResultPath: $.error
                Next: numberIsTooBig
            End: true
          numberIsTooBig:
            Type: Fail